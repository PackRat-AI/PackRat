name: 'Print Wrangler Logs'
description: 'Prints Wrangler logs files if exist'
inputs:
  WORKERS_AI_API_KEY:
    description: 'The Workers AI API Key'
    required: true
  VECTORIZE_API_KEY:
    description: 'The Vectorize API Key'
    required: true
  BUCKET_ACCESS_KEY_ID:
    description: 'The Bucket Access Key ID'
    required: true
  BUCKET_SECRET_KEY:
    description: 'The Bucket Secret Key'
    requuired: true
  GOOGLE_CLIENT_SECRET:
    description: 'The Google client secret'
    required: true
  JWT_SECRET:
    description: 'The JWT secret'
    required: true
  MAPBOX_ACCESS_TOKEN:
    description: 'The Mapbox access token'
    required: true
  OPENAI_API_KEY:
    description: 'The OpenAI API Key'
    required: true
  OPENWEATHER_KEY:
    description: 'The OpenWeather API Key'
    required: true
  REFRESH_TOKEN_SECRET:
    description: 'The refresh token secret'
    required: true
  SEND_GRID_API_KEY:
    description: 'The sendgrid API Key'
    required: true
  STMP_PASSWORD:
    description: 'The smtp password'
    required: true
  X_AMZ_SECURITY_TOKEN:
    description: 'The X-Amz-Security-Token'
    required: true
  JWT_VERIFICATION_KEY:
    description: 'The JWT verification key'
    required: true
  CLOUDFLARE_API_TOKEN:
    description: 'Cloudflare API Token'
    required: true
  CLOUDFLARE_ACCOUNT_ID:
    description: 'Cloudflare Account ID'
    required: true
  CLOUDFLARE_ENVIRONMENT:
    description: 'Cloudflare Environment'
    required: true
    type: choice
    options:
      - preview
      - production
runs:
  using: 'composite'
  steps:
    - name: Deploy database
      uses: cloudflare/wrangler-action@v3.3.2
      with:
        wranglerVersion: '3.75.0'
        apiToken: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
        workingDirectory: server
        # INFO: We need to upload secret manually because the default secrets input of this action `cloudflare/wrangler-action@v3.3.2` use the `wrangler secret put` command to upload secrets but this command will do not work non-interactive context.
        preCommands: >
          echo '---Generate and upload secrets---' &&
          echo '>> Generate secrets file' &&
          echo '{}' | jq '
          .BUCKET_ACCESS_KEY_ID="${{ inputs.BUCKET_ACCESS_KEY_ID }}" |
          .BUCKET_SECRET_KEY="${{ inputs.BUCKET_SECRET_KEY }}" |
          .GOOGLE_CLIENT_SECRET="${{ inputs.GOOGLE_CLIENT_SECRET }}" |
          .JWT_SECRET="${{ inputs.JWT_SECRET }}" |
          .JWT_VERIFICATION_KEY="${{ inputs.JWT_VERIFICATION_KEY }}" |
          .MAPBOX_ACCESS_TOKEN="${{ inputs.MAPBOX_ACCESS_TOKEN }}" |
          .OPENAI_API_KEY="${{ inputs.OPENAI_API_KEY }}" |
          .OPENWEATHER_KEY="${{ inputs.OPENWEATHER_KEY }}" |
          .REFRESH_TOKEN_SECRET="${{ inputs.REFRESH_TOKEN_SECRET }}" |
          .SEND_GRID_API_KEY="${{ inputs.SEND_GRID_API_KEY }}" |
          .STMP_PASSWORD="${{ inputs.STMP_PASSWORD }}" |
          .VECTORIZE_API_KEY="${{ inputs.VECTORIZE_API_KEY }}" |
          .WORKERS_AI_API_KEY="${{ inputs.WORKERS_AI_API_KEY }}" |
          .X_AMZ_SECURITY_TOKEN="${{ inputs.X_AMZ_SECURITY_TOKEN }}"
          ' > secrets.json &&
          echo '<< Secrets file generated' &&
          echo '>> Upload secrets' &&
          yarn wrangler secret bulk --env ${{ inputs.CLOUDFLARE_ENVIRONMENT }} secrets.json &&
          echo '<< Secrets uploaded'
        command: deploy src/index.ts --env ${{ inputs.CLOUDFLARE_ENVIRONMENT }}
        packageManager: yarn
      env:
        CI: true
        NO_D1_WARNING: true
        WRANGLER_LOG: debug
        WRANGLER_LOG_SANITIZE: false

    - name: Print wrangler extra logs on failure
      if: failure()
      uses: ./.github/actions/print-wrangler-logs
