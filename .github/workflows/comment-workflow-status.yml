name: Workflow Status Commenter

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_run:
    workflows:
      [
        'android-preview-build-local',
        'Run Tests',
        'Node.js CI',
        'Node.js CI for Development Environment',
        'EAS Local Build',
      ]
    types: [completed]

jobs:
  comment-workflow-status:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine branch name
        id: get-branch
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Fetch workflow runs
        id: fetch-workflows
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = process.env.BRANCH_NAME;
            const workflows = [
              'android-preview-build-local',
              'Run Tests',
              'Node.js CI',
              'Node.js CI for Development Environment',
              'EAS Local Build',
            ];

            const response = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branch,
              status: 'completed',
              per_page: 100 // Adjust this as needed
            });

            const filteredRuns = response.data.workflow_runs.filter(run => workflows.includes(run.name));
            return filteredRuns;

      - name: Create Comment Body
        id: create-table
        uses: actions/github-script@v6
        with:
          script: |
            const workflows = JSON.parse('${{ steps.fetch-workflows.outputs.result }}');
            let commentBody = "## Workflow Status\n| Workflow | Status | Details |\n|----------|--------|---------|\n";

            workflows.forEach(workflow => {
              let emoji;
              switch (workflow.conclusion) {
                case 'success':
                  emoji = '‚úÖ';
                  break;
                case 'failure':
                  emoji = '‚ùå';
                  break;
                case 'cancelled':
                  emoji = 'üö´';
                  break;
                case null:
                  emoji = 'üîÑ';
                  break;
                default:
                  emoji = '‚è∫Ô∏è';
              }

              commentBody += `| ${workflow.name} | ${emoji} ${workflow.conclusion || 'Loading...'} | [Logs](${workflow.html_url}) |\n`;
            });

            return { body: commentBody };

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.create-table.outputs.body }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on Push
        if: github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            const body = `## Workflow Status Comment\n\n${{ steps.create-table.outputs.body }}`;
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.run_id,
              body: body
            });

      - name: Comment on Workflow Run
        if: github.event_name == 'workflow_run'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            const body = `## Workflow Status Comment\n\n${{ steps.create-table.outputs.body }}`;
            await github.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.workflow_run.head_sha,
              body: body
            });
